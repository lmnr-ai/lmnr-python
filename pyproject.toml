# Laminar Python

# If you are looking for information about possible extras installations,
# i.e. what you can pass into `pip install 'lmnr[extra1,extra2]'`, please see the
# `[tool.poetry.extras]` section below.

[project]
name = "lmnr"
version = "0.4.51"
description = "Python SDK for Laminar"
authors = [
  { name = "lmnr.ai", email = "founders@lmnr.ai" }
]
readme = "README.md"
requires-python = ">=3.9,<4"
license = "Apache-2.0"
dependencies = [
  "poetry (>=2.0.0,<3.0.0)",
  "pydantic (>=2.7)",
  "requests (>=2.0)",
  "python-dotenv (>=1.0)",
  "opentelemetry-api (>=1.28.0)",
  "opentelemetry-sdk (>=1.28.0)",
  "opentelemetry-exporter-otlp-proto-http (>=1.28.0)",
  "opentelemetry-exporter-otlp-proto-grpc (>=1.28.0)",
  "opentelemetry-instrumentation-requests (>=0.50b0)",
  "opentelemetry-instrumentation-sqlalchemy (>=0.50b0)",
  "opentelemetry-instrumentation-urllib3 (>=0.50b0)",
  "opentelemetry-instrumentation-threading (>=0.50b0)",
  "opentelemetry-semantic-conventions-ai (>=0.4.2)",
  "deprecated (>=1.0)",
  "tqdm (>=4.0)",
  "argparse (>=1.0)",
  "aiohttp (>=3.0)",
  "tenacity (>=8.0)",
]

[project.scripts]
lmnr = "lmnr.cli:cli"

[tool.poetry]
requires-poetry = ">=2.0"

# TODO: Migrate these other to project section
[tool.poetry.dependencies]
opentelemetry-instrumentation-alephalpha = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-anthropic = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-bedrock = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-chromadb = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-cohere = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-google-generativeai = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-groq = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-haystack = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-lancedb = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-langchain = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-llamaindex = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-marqo = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-milvus = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-mistralai = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-ollama = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-openai = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-pinecone = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-qdrant = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-replicate = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-sagemaker = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-together = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-transformers = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-vertexai = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-watsonx = {version = ">=0.35.0", optional = true}
opentelemetry-instrumentation-weaviate = {version = ">=0.35.0", optional = true}

[project.optional-dependencies]
# List of all possible extras. You can specify one or more of these extras
# when installing the package, using any of the following:
# `pip install 'lmnr[anthropic,openai]'`
# `uv pip install 'lmnr[anthropic,openai]'`
# `uv add lmnr --extra anthropic --extra openai`
# `poetry add 'lmnr[anthropic,openai]'`

# `all` is the group added for convenience, if you want to install all
# the instrumentations.
all = [
  "opentelemetry-instrumentation-alephalpha",
  "opentelemetry-instrumentation-anthropic",
  "opentelemetry-instrumentation-bedrock",
  "opentelemetry-instrumentation-chromadb",
  "opentelemetry-instrumentation-cohere",
  "opentelemetry-instrumentation-google-generativeai",
  "opentelemetry-instrumentation-groq",
  "opentelemetry-instrumentation-haystack",
  "opentelemetry-instrumentation-lancedb",
  "opentelemetry-instrumentation-langchain",
  "opentelemetry-instrumentation-llamaindex",
  "opentelemetry-instrumentation-marqo",
  "opentelemetry-instrumentation-milvus",
  "opentelemetry-instrumentation-mistralai",
  "opentelemetry-instrumentation-ollama",
  "opentelemetry-instrumentation-openai",
  "opentelemetry-instrumentation-pinecone",
  "opentelemetry-instrumentation-qdrant",
  "opentelemetry-instrumentation-replicate",
  "opentelemetry-instrumentation-sagemaker",
  "opentelemetry-instrumentation-together",
  "opentelemetry-instrumentation-transformers",
  "opentelemetry-instrumentation-vertexai",
  "opentelemetry-instrumentation-watsonx",
  "opentelemetry-instrumentation-weaviate"
]
alephalpha=["opentelemetry-instrumentation-alephalpha"]
anthropic=["opentelemetry-instrumentation-anthropic"]
bedrock=["opentelemetry-instrumentation-bedrock"]
chromadb=["opentelemetry-instrumentation-chromadb"]
cohere=["opentelemetry-instrumentation-cohere"]
google-generativeai=["opentelemetry-instrumentation-google-generativeai"]
groq=["opentelemetry-instrumentation-groq"]
haystack=["opentelemetry-instrumentation-haystack"]
lancedb=["opentelemetry-instrumentation-lancedb"]
langchain=["opentelemetry-instrumentation-langchain"]
llamaindex=["opentelemetry-instrumentation-llamaindex"]
marqo=["opentelemetry-instrumentation-marqo"]
milvus=["opentelemetry-instrumentation-milvus"]
mistralai=["opentelemetry-instrumentation-mistralai"]
ollama=["opentelemetry-instrumentation-ollama"]
openai=["opentelemetry-instrumentation-openai"]
pinecone=["opentelemetry-instrumentation-pinecone"]
qdrant=["opentelemetry-instrumentation-qdrant"]
replicate=["opentelemetry-instrumentation-replicate"]
sagemaker=["opentelemetry-instrumentation-sagemaker"]
together=["opentelemetry-instrumentation-together"]
transformers=["opentelemetry-instrumentation-transformers"]
vertexai=["opentelemetry-instrumentation-vertexai"]
watsonx=["opentelemetry-instrumentation-watsonx"]
weaviate=["opentelemetry-instrumentation-weaviate"]

[tool.poetry.group.dev.dependencies]
autopep8 = "^2.2.0"
flake8 = "7.0.0"
pytest = "^8.2.2"
pytest-sugar = "1.0.0"
pytest-asyncio = "^0.24.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

